import { InferSchemaType, Schema, model } from "mongoose";

/* eslint-disable no-unused-vars */
export enum UserType {
  Student = "STUDENT",
  Alumni = "ALUMNI",
}
/* eslint-enable no-unused-vars */

const userSchema = new Schema({
  _id: {
    // ID generated by Google Oauth, must be called _id to be queried with .findById()
    type: String,
  },
  email: {
    type: String,
    required: true,
    unique: true,
    trim: true,
  },
  // Pass in from google
  name: {
    type: String,
    required: true,
    trim: true,
  },
  type: {
    type: String,
    enum: Object.values(UserType),
    default: UserType.Student,
  },
  linkedIn: {
    type: String,
    trim: true,
  },
  phoneNumber: {
    type: String,
    trim: true,
  },
  // Only for students
  major: {
    type: String,
    trim: true,
  },
  // Only for students
  classLevel: {
    type: String,
  },
  // Only for alumni
  company: {
    type: Schema.Types.ObjectId,
  },
  // Only for alumni
  shareProfile: {
    type: Boolean,
  },
});

type User = InferSchemaType<typeof userSchema>;

export default model<User>("User", userSchema);
